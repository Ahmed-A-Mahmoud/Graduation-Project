
import cv2
import numpy as np  # importing libraries

img = cv2.imread("image2.jpg")
gray_image = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2.imshow("Over the Clouds", img)
eq=cv2.equalizeHist(gray_image)

face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_alt.xml')
faces = face_cascade.detectMultiScale(eq, 1.3, 5)
for (x,y,w,h) in faces:
    cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2)
    roi_gray = eq[y:y+h, x:x+w]
    roi_color = img[y:y+h, x:x+w]


halfface = roi_color[int(h / 4):int(3*h/4), int(w / 4): int(3*w / 4)]
meanarr=np.mean(halfface, axis=(0, 1))
cv2.rectangle(img,(x,y),(x+w,y+h),(0,0,0),-1)

finalimg=img
height, width, channels = img.shape

i = 0
while i<height:
    j = 0
    while j<width:
        if (img[i,j][0] >= (meanarr[0]-15) and img[i,j][0] <= (meanarr[0]+15)) and (img[i,j][1] >= (meanarr[1]-15) and img[i,j][1] <= (meanarr[1]+15))\
                and (img[i,j][2] >= (meanarr[2]-15) and img[i,j][2] <= (meanarr[2]+15)):
            finalimg[i,j] = (255,255,255)
        else:
            finalimg[i,j] = 0;
        j = j+1
    i = i+1
cv2.imshow('finalimg',finalimg)
cv2.waitKey(0)
cv2.destroyAllWindows()
